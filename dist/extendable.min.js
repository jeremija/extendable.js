/*! extendable https://github.com/jeremija/extendable.js.git 29-11-2013 */
!function(){function a(){}var b={copyProperties:function(a,b){if(!b)throw new Error("p_dest must be defined");a=a||{};for(var c in a)a.hasOwnProperty(c)&&(b[c]=a[c])}};a.prototype={_extendLiteral:function(a){a=a||{};var c=this,d=Object.create(c);return b.copyProperties(a,d),d},_extendConstructor:function(c,d){var e="function"==typeof this?this:a,f=Object.create(e.prototype);return b.copyProperties(d,f),c.prototype=f,c.prototype.constructor=c,c.prototype.superclass=e,c.extend=this._extendConstructor||this.extend,c.override=this.override,c},extend:function(a,b){if("object"==typeof a)return this._extendLiteral(a);if("function"==typeof a)return this._extendConstructor(a,b);throw new Error("p_props must be an object literal or a  constructor function")},override:function(a,b){var c=this,d=c[a];if("string"!=typeof a)throw new TypeError("p_methodName should be a string");if("function"!=typeof d)throw new Error('Method "'+a+'" should be a function, but is '+typeof d);return c[a]=function(){function a(){return d.apply(c,arguments)}var c=this,e=Array.prototype.slice.call(arguments);return e.splice(0,0,a),b.apply(c,e)},c},create:function(){return Object.create(this)}};var c=new a;"undefined"!=typeof module&&module.exports?module.exports=c:"function"==typeof define&&define.amd?define([],function(){return c}):window.Extendable=c}();